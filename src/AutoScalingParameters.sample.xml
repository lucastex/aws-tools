<AutoScalingParameters>

  <autoScalingGroupName>AppServerGroupName</autoScalingGroupName>
  <launchConfigurationName>LaunchConfigurationName</launchConfigurationName>

  <autoScalingEndpoint>autoscaling.us-east-1.amazonaws.com</autoScalingEndpoint>
  <cloudWatchEndpoint>monitoring.us-east-1.amazonaws.com</cloudWatchEndpoint>

  <autoScalingGroupMin>1</autoScalingGroupMin>
  <autoScalingGroupMax>5</autoScalingGroupMax>
  <!--  The amount of time, in seconds, after a scaling activity completes before any further trigger-related scaling activities can start. -->
  <autoScalingGroupCoolDown>60</autoScalingGroupCoolDown>
  
  <policyName>ScaleUp</policyName>
  <policyScalingAdjustment>1</policyScalingAdjustment>
  <!-- A policy adjustment type. Valid values are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity. -->
  <policyAdjustmentType>ChangeInCapacity</policyAdjustmentType>
  
  <alarmMetricName>Latency</alarmMetricName>
  <alarmNamespace>AWS/ELB</alarmNamespace>
  <alarmStatistic>Average</alarmStatistic>
  <alarmPeriod>300</alarmPeriod>
  <alarmEvaluationPeriods>1</alarmEvaluationPeriods>
  <alarmThreshold>1.0</alarmThreshold>
  <alarmComparisonOperator>GreaterThanOrEqualToThreshold</alarmComparisonOperator>
  <alarmGroupDimesionName>AutoScalingGroupName</alarmGroupDimesionName>
  
  <accessKey>AccessKey</accessKey>
  <secretKey>SecretKey</secretKey>
  
  <appName>MyAwesomeAppName</appName>
  <appVersion>1</appVersion>
  
  <keyPair>KeyPairName</keyPair>
  <securityGroup>KeyPairName</securityGroup>
  
  <elbName>ElbName</elbName>
  
  <ami>ami-xxxxxxxx</ami>
  <instanceType>t1.micro</instanceType>
  <availabilityZone>us-east-1a</availabilityZone>
  
</AutoScalingParameters>